#include <stdio.h>
#include <stdlib.h>

#define MAX_STACK_SIZE 100

typedef int element;
typedef struct {
	element data[MAX_STACK_SIZE];
	int top;
}StackType;

void init_stack(StackType* s) {
	s->top = -1;
}

int is_empty(StackType* s) {
	return (s->top == -1);
}

int is_full(StackType* s) {
	return (s->top == (MAX_STACK_SIZE - 1));
}

void push(StackType* s, element item) {
	if (is_full(s)) {
		fprintf(stderr, "스택 포화 에러\n");
		return;
	}
	else s->data[++(s->top)] = item;
}

element pop(StackType* s) {
	if (is_empty(s)) {
		fprintf(stderr, "스택 공백 에러\n");
		exit(1);
	}
	else return s->data[(s->top)--];
}

int main(void) {
	StackType s;
	init_stack(&s);
	int num;
	scanf("%d", &num); // 몇 개의 숫자 입력
	int i;

	for (i = 0;i < num;i++) { // 입력받은 대로 반복
		int number;
		scanf("%d", &number); // 불러주는 숫자 입력
		if (number == 0) { // 잘못불렀을 때
			pop(&s);  // 삭제
		}
		else {
			push(&s, number); // 추가
		}
	}
	int j;
	int sum = 0;
	for (j = 0;j <= s.top;j++) {  // 모든 숫자 더함
		sum = sum + s.data[j];
	}
	
	printf("%d", sum); // 합 출력
	return 0;
}
