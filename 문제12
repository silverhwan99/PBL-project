#include <stdio.h>
#include <stdlib.h>

#define MAX_STACK_SIZE 100 // 스택 최대 사이즈 정의

typedef int element; // int type element로 표현
typedef struct {  //구조체를 StackType으로 표현
	element data[MAX_STACK_SIZE];
	int top;
}StackType;

void init_stack(StackType* s) { // 스택 초기화하는 함수
	s->top = -1;
}

int is_empty(StackType* s) {  // 스택이 비었는지 검사 함수
	return (s->top == -1);
}

int is_full(StackType* s) {  // 스택이 꽉 찼는지 검사 함수
	return (s->top == (MAX_STACK_SIZE - 1));
}

void push(StackType* s, element item) {  // 스택에 추가하는 함수
	if (is_full(s)) {
		fprintf(stderr, "스택 포화 에러\n");
		return;
	}
	else s->data[++(s->top)] = item;
}

element pop(StackType* s) {  // 스택에서 제거하는 함수
	if (is_empty(s)) {
		fprintf(stderr, "스택 공백 에러\n");
		exit(1);
	}
	else return s->data[(s->top)--];
}

int main(void) {
	StackType s;
	init_stack(&s);

	push(&s, 1);
	push(&s, 2);
	push(&s, 3);

	printf("%d\n",pop(&s));
	printf("%d\n",pop(&s));
	printf("%d\n",pop(&s));
	return 0;
}
